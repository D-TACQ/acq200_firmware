/*****************************************************************************
 *
 * File:
 *
 * Created by IntelliJ IDEA.
 * User: pgm
 * Date: May 27, 2002
 * Time: 12:35:59 PM
 *
 * $RCSfile: SignalGeneratorFrame.java,v $
 *
 * Copyright (C) 2002 D-TACQ Solutions Ltd
 * not to be used without owner's permission
 *
 * Description:
 *
 * $Id: SignalGeneratorFrame.java,v 1.5 2002/06/12 20:25:24 pgm Exp $
 * $Log: SignalGeneratorFrame.java,v $
 * Revision 1.5  2002/06/12 20:25:24  pgm
 * no control without commit, ChannelMask is per board
 *
 * Revision 1.4  2002/05/27 10:38:15  pgm
 * be seen
 *
 * Revision 1.3  2002/05/27 10:25:10  pgm
 * std headers throughout
 *
 *
 *
\*****************************************************************************/

import java.awt.*;
import javax.swing.*;

public class SignalGeneratorFrame extends FrameWithModel
{
	public SignalGeneratorFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		getContentPane().setLayout(new BorderLayout(0,0));
		setSize(405,305);
		arbPanel.setLayout(new GridBagLayout());
		getContentPane().add(BorderLayout.CENTER, arbPanel);
		arbPanel.setBounds(0,0,405,305);
		JTextArea2.setText("WORKTODO\nconfigure arbitrary AO, DO waveforms (acq32 only)");
		arbPanel.add(JTextArea2, new com.symantec.itools.awt.GridBagConstraintsD(-1,-1,1,1,0.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.NONE,new Insets(0,0,0,0),0,200));
		JTextArea2.setBounds(65,37,274,230);
		//}}

		//{{INIT_MENUS
		//}}
	}

	public SignalGeneratorFrame(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b)
			setLocation(50, 50);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new SignalGeneratorFrame()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets and menu bar
		Insets insets = getInsets();
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
			menuBarHeight = menuBar.getPreferredSize().height;
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JPanel arbPanel = new javax.swing.JPanel();
	javax.swing.JTextArea JTextArea2 = new javax.swing.JTextArea();
	//}}

	//{{DECLARE_MENUS
	//}}
    public void initModel() {

    }
}